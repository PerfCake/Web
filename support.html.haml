---
layout: default
---
%header#overview.jumbotron.subhead
  .row
    .span6
      %h1 
        %i.icon-phone
        Support
      %p.lead How can we help you?
    .span6
      .well{:style => "padding: 25px 25px 15px 25px;"}
        %span{:style => "display: block; font-weight: bold; margin-bottom: 1em;"} We are good at performance testing!
        %span{:style => "display: block;"} If you still does not feel strong enough after going through the guides or you need any advise on performance testing of your application, just give us a try.
        %div{:style => "clear:both"}
  .row
    .span12
      .page-header
        %h2 
          %i.icon-question-sign
          Did you already try the following resources?
        %ul
          %li 
            We have various guides available
            %ul
              %li
                %i.icon-time
                %a{:href => "#{site.base_url}/quickstart"} Quickstart Example 
                \- run your first benchmark in 5 minutes
              %li
                %a{:href => "#{site.base_url}/guide/user"} Users' guide
              %li
                %a{:href => "#{site.base_url}/guide/devel"} Developers' guide
              %li
                %a{:href => "#{site.base_url}/javadoc"} JavaDoc
          %li 
            Try asking at
            %a{:href => "https://groups.google.com/forum/#!forum/perfcake", :target => "_blank"} PerfCake Google Group
          %li 
            %i.icon-comments
            our Community IRC channel 
            %strong #perfcake
            at
            %strong irc.freenode.net
      %h2 
        %i.icon-ambulance
        Still in doubt?
      .row
        .span6.offset1
          %div#errors
          %form.form-horizontal.well{:name=> 'contactForm', :method => 'POST', :action => 'https://www.perfcake.org/scripts/email.php'}
            %input{:type => 'hidden', :name => 'password', :value => 'perfCakeSecret123'}
            %fieldset
              %legend Contact Us
              .control-group
                %label.control-label{:for => 'email'} Your Email
                .controls
                  %input.input-xlarge#email{:type => 'text', :name => 'from', :placeholder => 'Enter your email...', :autofocus => 'true', :required => 'true'}
              .control-group
                %label.control-label{:for => 'subject'} Message Subject
                .controls
                  %input.input-xlarge#subject{:type => 'text', :name => 'subject', :placeholder => 'Enter the message subject...', :required => 'true'}
              .control-group
                %label.control-label{:for => 'body'} Message Body
                .controls
                  %textarea.input-xlarge#body{:name => 'message', :placeholder => 'Enter the message body...', :required => 'true', :rows => 8}
              .form-actions
                %button.btn.btn-primary{:type => 'submit'} Send
      :javascript
        function parseGet() {
          var errors = "";
          var okSent = false;
          var FormName = "contactForm";
          var pos = location.href.indexOf('?');
          if (pos < 0) { return; }
          var q = location.href.substr(pos + 1);
          var list = q.split('&');
          for(var i = 0; i < list.length; i++) {
            var kv = list[i].split('=');
            kv[1] = unescape(kv[1].replace(/\+/g, '%20'));
            if (kv[0] == "errors") {
              errors = kv[1];
            } else if (kv[0] == "sent") {
              okSent = true;
            } else {
              kv[1] = kv[1].replace(/"/g,'\\"');
              eval('document.' + FormName + '.' + kv[0] + '.value="' + kv[1] + '"');
            }
          }
          if (errors) {
            var div = document.getElementById("errors");
            div.className = 'alert ' + (okSent ? 'alert-success' : 'alert-error');
            div.innerHTML = '<i class="icon-info-sign" />&nbsp;' + errors;
          }
        }
        parseGet();
